/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/providence-automation/route";
exports.ids = ["app/api/providence-automation/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/selenium-webdriver/lib/atoms sync recursive ^\\.\\/.*$":
/*!******************************************************************!*\
  !*** ./node_modules/selenium-webdriver/lib/atoms/ sync ^\.\/.*$ ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./bidi-mutation-listener": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/bidi-mutation-listener.js",
	"./bidi-mutation-listener.js": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/bidi-mutation-listener.js",
	"./find-elements": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/find-elements.js",
	"./find-elements.js": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/find-elements.js",
	"./get-attribute": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/get-attribute.js",
	"./get-attribute.js": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/get-attribute.js",
	"./is-displayed": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/is-displayed.js",
	"./is-displayed.js": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/is-displayed.js",
	"./mutation-listener": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/mutation-listener.js",
	"./mutation-listener.js": "(rsc)/./node_modules/selenium-webdriver/lib/atoms/mutation-listener.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "(rsc)/./node_modules/selenium-webdriver/lib/atoms sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "(rsc)/./node_modules/selenium-webdriver/lib sync recursive":
/*!***************************************************!*\
  !*** ./node_modules/selenium-webdriver/lib/ sync ***!
  \***************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/selenium-webdriver/lib sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "node:child_process":
/*!*************************************!*\
  !*** external "node:child_process" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:child_process");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ "node:os":
/*!**************************!*\
  !*** external "node:os" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:os");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ "?d272":
/*!********************************!*\
  !*** supports-color (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprovidence-automation%2Froute&page=%2Fapi%2Fprovidence-automation%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprovidence-automation%2Froute.ts&appDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprovidence-automation%2Froute&page=%2Fapi%2Fprovidence-automation%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprovidence-automation%2Froute.ts&appDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_thand_OneDrive_Desktop_project_src_app_api_providence_automation_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/providence-automation/route.ts */ \"(rsc)/./src/app/api/providence-automation/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/providence-automation/route\",\n        pathname: \"/api/providence-automation\",\n        filename: \"route\",\n        bundlePath: \"app/api/providence-automation/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\thand\\\\OneDrive\\\\Desktop\\\\project\\\\src\\\\app\\\\api\\\\providence-automation\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_thand_OneDrive_Desktop_project_src_app_api_providence_automation_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/providence-automation/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm92aWRlbmNlLWF1dG9tYXRpb24lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnByb3ZpZGVuY2UtYXV0b21hdGlvbiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnByb3ZpZGVuY2UtYXV0b21hdGlvbiUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUN0aGFuZCU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q3Byb2plY3QlNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q3RoYW5kJTVDT25lRHJpdmUlNUNEZXNrdG9wJTVDcHJvamVjdCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDNEM7QUFDekg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nb29nbGUtc2hlZXRzLXNlbGVuaXVtLWF1dG9tYXRpb24vPzQwMjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcdGhhbmRcXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxwcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHByb3ZpZGVuY2UtYXV0b21hdGlvblxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvdmlkZW5jZS1hdXRvbWF0aW9uL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJvdmlkZW5jZS1hdXRvbWF0aW9uXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wcm92aWRlbmNlLWF1dG9tYXRpb24vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFx0aGFuZFxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXHByb2plY3RcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxccHJvdmlkZW5jZS1hdXRvbWF0aW9uXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9wcm92aWRlbmNlLWF1dG9tYXRpb24vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprovidence-automation%2Froute&page=%2Fapi%2Fprovidence-automation%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprovidence-automation%2Froute.ts&appDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/providence-automation/route.ts":
/*!****************************************************!*\
  !*** ./src/app/api/providence-automation/route.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _src_lib_googleSheets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/src/lib/googleSheets */ \"(rsc)/./src/lib/googleSheets.ts\");\n/* harmony import */ var _src_lib_providenceAutomation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/lib/providenceAutomation */ \"(rsc)/./src/lib/providenceAutomation.ts\");\n\n\nasync function POST(request) {\n    const encoder = new TextEncoder();\n    const stream = new ReadableStream({\n        start (controller) {\n            let currentProcessingStepId = \"\";\n            (async ()=>{\n                try {\n                    const { username, password, googleSheetUrl } = await request.json();\n                    if (!username || !password || !googleSheetUrl) {\n                        throw new Error(\"Missing required configuration (username, password, or Google Sheet URL)\");\n                    }\n                    // Step 1: Initialize Browser\n                    currentProcessingStepId = \"initialize\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"initialize\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"running\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: \"Searching orders and updating locations\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    const automation = new _src_lib_providenceAutomation__WEBPACK_IMPORTED_MODULE_1__.ProvidenceAutomation();\n                    await automation.initialize();\n                    // Step 2: Navigate to Providence\n                    currentProcessingStepId = \"navigate\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"navigate\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"running\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: \"Searching orders and updating locations\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    await automation.navigateToLogin();\n                    // Step 3: Login\n                    currentProcessingStepId = \"login\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"login\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"running\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: \"Searching orders and updating locations\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    await automation.login(username, password);\n                    // Step 4: Select Facility\n                    currentProcessingStepId = \"facility\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"facility\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"running\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: \"Searching orders and updating locations\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    await automation.selectFacility();\n                    // Step 5: Navigate to Inventory Management\n                    currentProcessingStepId = \"inventory\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"inventory\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"running\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: \"Searching orders and updating locations\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    await automation.navigateToInventoryManagement();\n                    // Step 6: Open Manual Items\n                    currentProcessingStepId = \"manual-items\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"manual-items\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"running\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: \"Searching orders and updating locations\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    await automation.navigateToManualItems();\n                    // Step 7: Read Google Sheet\n                    currentProcessingStepId = \"read-sheet\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"read-sheet\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"running\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: \"Searching orders and updating locations\",\n                                status: \"pending\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    const sheetsService = new _src_lib_googleSheets__WEBPACK_IMPORTED_MODULE_0__.GoogleSheetsService();\n                    const allOrders = await sheetsService.processSheet(googleSheetUrl);\n                    const boltOrders = allOrders.filter((order)=>order.orderNumber && order.orderNumber.toString().startsWith(\"BoltYYZ3\"));\n                    console.log(`Found ${boltOrders.length} BoltYYZ3 orders to process`);\n                    // Step 8: Process Orders\n                    currentProcessingStepId = \"process-orders\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: true,\n                        currentStepId: \"process-orders\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: `Processing ${boltOrders.length} BoltYYZ3 orders`,\n                                status: \"running\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"pending\"\n                            }\n                        ]\n                    })}\\n\\n`));\n                    const results = [];\n                    for(let i = 0; i < Math.min(boltOrders.length, 5); i++){\n                        const order = boltOrders[i];\n                        const orderNumber = order.orderNumber.toString();\n                        try {\n                            console.log(`Processing order ${i + 1}/${boltOrders.length}: ${orderNumber}`);\n                            controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                                isRunning: true,\n                                currentStepId: \"process-orders\",\n                                steps: [\n                                    {\n                                        id: \"initialize\",\n                                        title: \"Initialize Browser\",\n                                        description: \"Starting Chrome browser and preparing automation\",\n                                        status: \"completed\"\n                                    },\n                                    {\n                                        id: \"navigate\",\n                                        title: \"Navigate to Providence\",\n                                        description: \"Opening https://providence.gobolt.com/login\",\n                                        status: \"completed\"\n                                    },\n                                    {\n                                        id: \"login\",\n                                        title: \"Login to Providence\",\n                                        description: \"Entering credentials and logging in\",\n                                        status: \"completed\"\n                                    },\n                                    {\n                                        id: \"facility\",\n                                        title: \"Select Facility\",\n                                        description: \"Selecting YYZ5 from facility dropdown\",\n                                        status: \"completed\"\n                                    },\n                                    {\n                                        id: \"inventory\",\n                                        title: \"Navigate to Inventory Management\",\n                                        description: \"Clicking on Inventory Management tab\",\n                                        status: \"completed\"\n                                    },\n                                    {\n                                        id: \"manual-items\",\n                                        title: \"Open Manual Items\",\n                                        description: \"Clicking on Manual Items section\",\n                                        status: \"completed\"\n                                    },\n                                    {\n                                        id: \"read-sheet\",\n                                        title: \"Read Google Sheet\",\n                                        description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                        status: \"completed\"\n                                    },\n                                    {\n                                        id: \"process-orders\",\n                                        title: \"Process Orders\",\n                                        description: `Processing ${orderNumber} (${i + 1}/${Math.min(boltOrders.length, 5)})`,\n                                        status: \"running\"\n                                    },\n                                    {\n                                        id: \"complete\",\n                                        title: \"Automation Complete\",\n                                        description: \"All steps completed successfully\",\n                                        status: \"pending\"\n                                    }\n                                ],\n                                results: [\n                                    ...results,\n                                    {\n                                        orderNumber,\n                                        status: \"processing\"\n                                    }\n                                ]\n                            })}\\n\\n`));\n                            const orderData = await automation.searchOrder(orderNumber);\n                            console.log(`Order data for ${orderNumber}:`, JSON.stringify(orderData, null, 2)); // Detailed logging of orderData\n                            if (orderData.locations && orderData.locations.length > 0 && !orderData.error) {\n                                console.log(`Found ${orderData.locations.length} locations for ${orderNumber}: ${orderData.locations.join(\", \")}`);\n                                try {\n                                    await sheetsService.updateLocationInSheet(googleSheetUrl, orderNumber, orderData.locations);\n                                    console.log(`✅ Successfully updated sheet for ${orderNumber} with ${orderData.locations.length} locations`);\n                                } catch (sheetError) {\n                                    console.error(`❌ Failed to update sheet for ${orderNumber}:`, sheetError);\n                                    throw sheetError;\n                                }\n                                const result = {\n                                    orderNumber,\n                                    status: \"success\",\n                                    message: `Updated ${orderData.locations.length} locations successfully`,\n                                    locations: orderData.locations\n                                };\n                                results.push(result);\n                                controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                                    isRunning: true,\n                                    currentStepId: \"process-orders\",\n                                    steps: [\n                                        {\n                                            id: \"initialize\",\n                                            title: \"Initialize Browser\",\n                                            description: \"Starting Chrome browser and preparing automation\",\n                                            status: \"completed\"\n                                        },\n                                        {\n                                            id: \"navigate\",\n                                            title: \"Navigate to Providence\",\n                                            description: \"Opening https://providence.gobolt.com/login\",\n                                            status: \"completed\"\n                                        },\n                                        {\n                                            id: \"login\",\n                                            title: \"Login to Providence\",\n                                            description: \"Entering credentials and logging in\",\n                                            status: \"completed\"\n                                        },\n                                        {\n                                            id: \"facility\",\n                                            title: \"Select Facility\",\n                                            description: \"Selecting YYZ5 from facility dropdown\",\n                                            status: \"completed\"\n                                        },\n                                        {\n                                            id: \"inventory\",\n                                            title: \"Navigate to Inventory Management\",\n                                            description: \"Clicking on Inventory Management tab\",\n                                            status: \"completed\"\n                                        },\n                                        {\n                                            id: \"manual-items\",\n                                            title: \"Open Manual Items\",\n                                            description: \"Clicking on Manual Items section\",\n                                            status: \"completed\"\n                                        },\n                                        {\n                                            id: \"read-sheet\",\n                                            title: \"Read Google Sheet\",\n                                            description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                            status: \"completed\"\n                                        },\n                                        {\n                                            id: \"process-orders\",\n                                            title: \"Process Orders\",\n                                            description: `✅ Updated ${orderNumber} (${i + 1}/${Math.min(boltOrders.length, 5)}) with ${orderData.locations.length} locations`,\n                                            status: \"running\"\n                                        },\n                                        {\n                                            id: \"complete\",\n                                            title: \"Automation Complete\",\n                                            description: \"All steps completed successfully\",\n                                            status: \"pending\"\n                                        }\n                                    ],\n                                    results: results\n                                })}\\n\\n`));\n                            } else {\n                                const errorMessage = orderData.error || \"No locations found\";\n                                console.log(`❌ No locations found for ${orderNumber}: ${errorMessage}`);\n                                try {\n                                    await sheetsService.updateLocationInSheet(googleSheetUrl, orderNumber, []);\n                                    console.log(`✅ Updated sheet for ${orderNumber} with \"No location\"`);\n                                } catch (sheetError) {\n                                    console.error(`❌ Failed to update sheet for ${orderNumber}:`, sheetError);\n                                }\n                                const result = {\n                                    orderNumber,\n                                    status: \"error\",\n                                    message: errorMessage\n                                };\n                                results.push(result);\n                            }\n                            await new Promise((resolve)=>setTimeout(resolve, 4000)); // Delay for sheet updates\n                        } catch (error) {\n                            console.error(`Error processing order ${orderNumber}:`, error);\n                            try {\n                                await sheetsService.updateLocationInSheet(googleSheetUrl, orderNumber, [\n                                    \"Error\"\n                                ]);\n                                console.log(`✅ Updated sheet for ${orderNumber} with \"Error\"`);\n                            } catch (sheetError) {\n                                console.error(`❌ Failed to update sheet for ${orderNumber}:`, sheetError);\n                            }\n                            const result = {\n                                orderNumber,\n                                status: \"error\",\n                                message: error instanceof Error ? error.message : \"Unknown error occurred\"\n                            };\n                            results.push(result);\n                        }\n                    }\n                    // Step 9: Complete\n                    currentProcessingStepId = \"complete\";\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: false,\n                        currentStepId: \"complete\",\n                        steps: [\n                            {\n                                id: \"initialize\",\n                                title: \"Initialize Browser\",\n                                description: \"Starting Chrome browser and preparing automation\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"navigate\",\n                                title: \"Navigate to Providence\",\n                                description: \"Opening https://providence.gobolt.com/login\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"login\",\n                                title: \"Login to Providence\",\n                                description: \"Entering credentials and logging in\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"facility\",\n                                title: \"Select Facility\",\n                                description: \"Selecting YYZ5 from facility dropdown\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"inventory\",\n                                title: \"Navigate to Inventory Management\",\n                                description: \"Clicking on Inventory Management tab\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"manual-items\",\n                                title: \"Open Manual Items\",\n                                description: \"Clicking on Manual Items section\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"read-sheet\",\n                                title: \"Read Google Sheet\",\n                                description: \"Fetching BoltYYZ3 orders from Google Sheet\",\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"process-orders\",\n                                title: \"Process Orders\",\n                                description: `Processed ${results.length} orders successfully`,\n                                status: \"completed\"\n                            },\n                            {\n                                id: \"complete\",\n                                title: \"Automation Complete\",\n                                description: \"All steps completed successfully\",\n                                status: \"completed\"\n                            }\n                        ],\n                        results: results\n                    })}\\n\\n`));\n                } catch (error) {\n                    console.error(\"Automation error:\", error);\n                    const allSteps = [\n                        {\n                            id: \"initialize\",\n                            title: \"Initialize Browser\",\n                            description: \"Starting Chrome browser and preparing automation\"\n                        },\n                        {\n                            id: \"navigate\",\n                            title: \"Navigate to Providence\",\n                            description: \"Opening https://providence.gobolt.com/login\"\n                        },\n                        {\n                            id: \"login\",\n                            title: \"Login to Providence\",\n                            description: \"Entering credentials and logging in\"\n                        },\n                        {\n                            id: \"facility\",\n                            title: \"Select Facility\",\n                            description: \"Selecting YYZ5 from facility dropdown\"\n                        },\n                        {\n                            id: \"inventory\",\n                            title: \"Navigate to Inventory Management\",\n                            description: \"Clicking on Inventory Management tab\"\n                        },\n                        {\n                            id: \"manual-items\",\n                            title: \"Open Manual Items\",\n                            description: \"Clicking on Manual Items section\"\n                        },\n                        {\n                            id: \"read-sheet\",\n                            title: \"Read Google Sheet\",\n                            description: \"Fetching BoltYYZ3 orders from Google Sheet\"\n                        },\n                        {\n                            id: \"process-orders\",\n                            title: \"Process Orders\",\n                            description: \"Searching orders and updating locations\"\n                        },\n                        {\n                            id: \"complete\",\n                            title: \"Automation Complete\",\n                            description: \"All steps completed successfully\"\n                        }\n                    ];\n                    const errorSteps = allSteps.map((step)=>{\n                        if (step.id === currentProcessingStepId) {\n                            return {\n                                ...step,\n                                status: \"error\",\n                                error: error instanceof Error ? error.message : \"Unknown error\"\n                            };\n                        } else if (allSteps.findIndex((s)=>s.id === currentProcessingStepId) > allSteps.findIndex((s)=>s.id === step.id)) {\n                            return {\n                                ...step,\n                                status: \"completed\"\n                            };\n                        } else {\n                            return {\n                                ...step,\n                                status: \"pending\"\n                            };\n                        }\n                    });\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                        isRunning: false,\n                        currentStepId: currentProcessingStepId,\n                        steps: errorSteps,\n                        error: error instanceof Error ? error.message : \"Unknown error occurred\"\n                    })}\\n\\n`));\n                } finally{\n                    controller.close();\n                }\n            })();\n        }\n    });\n    return new Response(stream, {\n        headers: {\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache\",\n            \"Connection\": \"keep-alive\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/providence-automation/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/googleSheets.ts":
/*!*********************************!*\
  !*** ./src/lib/googleSheets.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GoogleSheetsService: () => (/* binding */ GoogleSheetsService)\n/* harmony export */ });\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! googleapis */ \"(rsc)/./node_modules/googleapis/build/src/index.js\");\n\nclass GoogleSheetsService {\n    constructor(){\n        const auth = new googleapis__WEBPACK_IMPORTED_MODULE_0__.google.auth.GoogleAuth({\n            credentials: {\n                client_email: \"automation@pawandeep-portfolio.iam.gserviceaccount.com\",\n                private_key: \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCqyg/8WmZzG+/m\\n5vQWK0uUvpJX3jUmuCo+GN4/RS4wRXf3OT4vVUbQC6w3ntH9tWYHLtBlJfLkGGCz\\nRAbgSVgGTgKe+AGwrJoSuyvX7vBAUupSKFrN9tWj3rgz8tBzXXauag9HEaVhmWZ8\\n9EQqZb8i+4jxxP327L1MIxDx/VwHDq4cCDq3dr1OH4WSLESU1u3Ivr7VyvfXLq9m\\n7KILZYIMu8MyUk7vPjCcfnkyy0D5tHywIKGYQBiMB8xVI9CQ0isTLkvl3XhcBWSv\\nFYidkIXID+PCYrAwepK4UZkl5CharLg+uv/q8OBNGukw2iTiDhrgPIafCf14B3Cl\\np56cfzOnAgMBAAECggEAA29rB0vK/ortgvrapma0Iq37al8JOXOM2sQY4rO07FQJ\\nYX46Q2BD7pCKVz519NQ+obhavFFMfTM5IE7Ak9q5AlXa9Nc1ZktVq58uKfq5Xftz\\nXetH4EqttpnjoWl2sRgl+F4gjopkhcqjGbJQ4kihO1/mokF9f9QrmCnaAADbmZy0\\n94vXkY7/sThlARQKWCRLGx31WYjZIUnXBvOP0YW2pfgirdVX69yGc2EAvc7DT5YM\\npdBeHQiAH0hBgErWDexaghwgwviyXJawvehzteY2bOHowwTde+bD83a4tieEkiA2\\nLuDO2M2MHZrG5R4IGccVUENJlgHyyxmsps/AjgkBuQKBgQDTBG+/yTnsL/K9nHRz\\ns4jcYGo5fvH7Do5pxb8Bc9+C5EhBwpijlT+TpcuIu4nPvRKlMmYLC4D9vc88Pb23\\nCZN8MZvw0lgVa8E4oNpmkx4MWsAefhse1tUKGxlE6JU7ADDRNY5BMjqgIMVRoEzi\\nLr7Jbh/R+4bYQCi2hZMjSzErewKBgQDPMlD9oULnrkHx0O1VkFpy71QUpNcmPTtr\\nMLxzcUdGQnBZoW/rXD0CM5dM08sITHyqHNtYU5vifVvLc0UEhfYpQZ46KKOeHYtr\\ncbQeXELK25ftouP/qidyMoKY+RkbuI9XMNVASt8Csozhz18nKRQRck5fovFCTPKL\\nk8lA50baxQKBgQCT2C7ng3gWuD1thdm9WtOP++lQ4VVvHfK/vvGldebq0UCi+lFx\\ng1co/meNJEBZEVKn9ZizMlss7Ljurx9lx8rSn/tvDiDy2S1mnKSIa5kI9OhYNOiR\\ngdl/nB7nPcGYtfh+C/TgTu3uVSeKmjJj4nZ/sK2QtJb0mncr8oh1mPAZUwKBgByi\\nRoEWpSlhcqmZhwMZJPbXTlZgBX+6XJjOrmyBzijOi7pHTjFHmQLR4Gn0pw1pjJzx\\nyfpl65gcXPA76ODcJo3DDLva2+nBCYB6wTqk43IncNKdfUba3AKzKks7uZWUJvMU\\nw5PUBQfZZxDZ2LuPuL9EfcJHwXG5MpfJf7mhfLBFAoGAb5rLTnGZFI3ms/fy22aC\\n5qABOz+NsArEMEhxRZEeW1DZpB7UBagxYuZ1HxlWkVIDsbrWbBzyKcdC/4DH7a4H\\nXGmbZRNbgQ8vqwfa2NXYQ0ejVJQMOAW5ngiF3pRcuVmV6tHiGccqQIYYvZ528gdi\\ng57qlNV0kZ6KNQ3KVDFuuKs=\\n-----END PRIVATE KEY-----\\n\"?.replace(/\\\\n/g, \"\\n\")\n            },\n            scopes: [\n                \"https://www.googleapis.com/auth/spreadsheets\"\n            ]\n        });\n        this.sheets = googleapis__WEBPACK_IMPORTED_MODULE_0__.google.sheets({\n            version: \"v4\",\n            auth\n        });\n    }\n    extractSpreadsheetId(url) {\n        const match = url.match(/\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/);\n        if (!match) {\n            throw new Error(\"Invalid Google Sheets URL format\");\n        }\n        return match[1];\n    }\n    parseDateString(dateStr) {\n        const currentYear = new Date().getFullYear();\n        const match = dateStr.match(/^(\\d{1,2})\\/(\\d{1,2})$/);\n        if (match) {\n            const month = parseInt(match[1], 10);\n            const day = parseInt(match[2], 10);\n            if (month >= 1 && month <= 12 && day >= 1 && day <= 31) {\n                return new Date(currentYear, month - 1, day);\n            }\n        }\n        return null;\n    }\n    async getLatestDateSheet(spreadsheetId) {\n        try {\n            const response = await this.sheets.spreadsheets.get({\n                spreadsheetId,\n                fields: \"sheets.properties.title\"\n            });\n            const sheets = response.data.sheets;\n            if (!sheets || sheets.length === 0) {\n                throw new Error(\"No sheets found in the spreadsheet\");\n            }\n            let latestSheet = \"\";\n            let latestDate = null;\n            for (const sheet of sheets){\n                const title = sheet.properties?.title;\n                if (!title) continue;\n                const parsedDate = this.parseDateString(title);\n                if (parsedDate && (!latestDate || parsedDate > latestDate)) {\n                    latestDate = parsedDate;\n                    latestSheet = title;\n                }\n            }\n            if (!latestSheet) {\n                latestSheet = sheets[0].properties?.title || \"Sheet1\";\n            }\n            return latestSheet;\n        } catch (error) {\n            console.error(\"Error getting sheet names:\", error);\n            throw new Error(\"Failed to access Google Sheet. Please check permissions and URL.\");\n        }\n    }\n    async getOrderNumbers(spreadsheetId, sheetName) {\n        try {\n            const response = await this.sheets.spreadsheets.values.get({\n                spreadsheetId,\n                range: `${sheetName}!A:Z`\n            });\n            const rows = response.data.values || [];\n            if (!rows || rows.length === 0) {\n                return [];\n            }\n            const headerRow = rows[0];\n            const orderColumnIndex = this.findOrderColumn(headerRow);\n            if (orderColumnIndex === -1) {\n                throw new Error('Could not find order number column. Expected headers like \"Order\", \"Order Number\", or \"Order ID\"');\n            }\n            const orders = [];\n            for(let i = 1; i < rows.length; i++){\n                const row = rows[i];\n                const orderNumber = row[orderColumnIndex]?.toString().trim();\n                if (orderNumber) {\n                    const orderData = {\n                        orderNumber\n                    };\n                    for(let j = 0; j < headerRow.length; j++){\n                        if (j !== orderColumnIndex && row[j]) {\n                            const header = headerRow[j]?.toString().toLowerCase().replace(/\\s+/g, \"_\");\n                            orderData[header] = row[j];\n                        }\n                    }\n                    orders.push(orderData);\n                }\n            }\n            return orders;\n        } catch (error) {\n            console.error(\"Error reading sheet data:\", error);\n            throw new Error(\"Failed to read order data from the sheet\");\n        }\n    }\n    findOrderColumn(headers) {\n        const orderHeaders = [\n            \"order\",\n            \"order number\",\n            \"order_number\",\n            \"ordernumber\",\n            \"order id\",\n            \"order_id\",\n            \"orderid\"\n        ];\n        for(let i = 0; i < headers.length; i++){\n            const header = headers[i]?.toString().toLowerCase().trim();\n            if (orderHeaders.includes(header)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    async processSheet(googleSheetUrl) {\n        const spreadsheetId = this.extractSpreadsheetId(googleSheetUrl);\n        console.log(\"=== PROCESSING GOOGLE SHEET ===\");\n        console.log(\"Sheet URL:\", googleSheetUrl);\n        console.log(\"Spreadsheet ID:\", spreadsheetId);\n        const response = await this.sheets.spreadsheets.get({\n            spreadsheetId,\n            fields: \"sheets.properties.title\"\n        });\n        const sheets = response.data.sheets;\n        if (!sheets || sheets.length === 0) {\n            throw new Error(\"No sheets found in the spreadsheet\");\n        }\n        const sheetName = sheets[0].properties?.title || \"Sheet1\";\n        console.log(\"Using sheet:\", sheetName);\n        const dataResponse = await this.sheets.spreadsheets.values.get({\n            spreadsheetId,\n            range: `${sheetName}!A:M`\n        });\n        const rows = dataResponse.data.values;\n        if (!rows || rows.length === 0) {\n            return [];\n        }\n        console.log(`Found ${rows.length} total rows (including header)`);\n        const headerRow = rows[0];\n        console.log(\"Headers:\", headerRow);\n        const orders = [];\n        for(let i = 1; i < rows.length; i++){\n            const row = rows[i];\n            const orderNumber = row[4]?.toString().trim(); // Column E (Order Number)\n            if (orderNumber) {\n                const order = {\n                    orderNumber: orderNumber,\n                    vehicle: row[0] || \"\",\n                    sequence: row[1] || \"\",\n                    route_number: row[2] || \"\",\n                    route_name: row[3] || \"\",\n                    locations: row[5] || \"\",\n                    status: row[6] || \"\",\n                    customer_name: row[7] || \"\",\n                    customer_address: row[8] || \"\",\n                    appointment_type: row[9] || \"\",\n                    article_count: row[10] || \"\"\n                };\n                orders.push(order);\n            }\n        }\n        console.log(`Found ${orders.length} orders in sheet \"${sheetName}\"`);\n        const boltOrders = orders.filter((order)=>order.orderNumber && order.orderNumber.toString().startsWith(\"BoltYYZ3\"));\n        console.log(`Found ${boltOrders.length} BoltYYZ3 orders:`);\n        boltOrders.forEach((order, index)=>{\n            console.log(`${index + 1}. ${order.orderNumber} - ${order.customer_name} - ${order.customer_address}`);\n        });\n        return orders;\n    }\n    async updateLocationInSheet(googleSheetUrl, orderNumber, locations) {\n        const spreadsheetId = this.extractSpreadsheetId(googleSheetUrl);\n        console.log(`=== UPDATING GOOGLE SHEET ===`);\n        console.log(`Order: ${orderNumber}`);\n        console.log(`Locations: ${locations.join(\", \") || \"No locations\"}`);\n        console.log(`Sheet URL: ${googleSheetUrl}`);\n        console.log(`Spreadsheet ID: ${spreadsheetId}`);\n        try {\n            const response = await this.sheets.spreadsheets.get({\n                spreadsheetId,\n                fields: \"sheets.properties.title\"\n            });\n            const sheets = response.data.sheets;\n            if (!sheets || sheets.length === 0) throw new Error(\"No sheets found in the spreadsheet\");\n            const sheetName = sheets[0].properties?.title || \"Sheet1\";\n            console.log(`Using sheet: ${sheetName}`);\n            const dataResponse = await this.sheets.spreadsheets.values.get({\n                spreadsheetId,\n                range: `${sheetName}!A:M`\n            });\n            const rows = dataResponse.data.values || [];\n            if (rows.length === 0) throw new Error(\"No data found in sheet\");\n            console.log(`Found ${rows.length} rows in sheet`);\n            const headerRow = rows[0];\n            console.log(\"Sheet headers:\", headerRow);\n            const orderColumnIndex = 4; // Column E (Order Number)\n            const locationColumnIndex = 5; // Column F (Locations)\n            let targetRowIndex = -1;\n            let originalRowData = [];\n            for(let i = 1; i < rows.length; i++){\n                const row = rows[i];\n                const cellOrderNumber = row[orderColumnIndex]?.toString().trim();\n                console.log(`Row ${i + 1}: Checking \"${cellOrderNumber}\" against \"${orderNumber}\"`);\n                if (cellOrderNumber === orderNumber) {\n                    targetRowIndex = i + 1; // 1-indexed\n                    originalRowData = [\n                        ...row\n                    ]; // Store the entire original row\n                    console.log(`✅ Found order ${orderNumber} at row ${targetRowIndex}`);\n                    break;\n                }\n            }\n            if (targetRowIndex === -1) {\n                console.log(`❌ Order ${orderNumber} not found in sheet`);\n                throw new Error(`Order ${orderNumber} not found in sheet`);\n            }\n            // Handle no locations case\n            if (locations.length === 0) {\n                const range = `${sheetName}!F${targetRowIndex}`;\n                await this.sheets.spreadsheets.values.update({\n                    spreadsheetId,\n                    range,\n                    valueInputOption: \"RAW\",\n                    requestBody: {\n                        values: [\n                            [\n                                \"No location\"\n                            ]\n                        ]\n                    }\n                });\n                console.log(`✅ Updated ${orderNumber} with \"No location\" in range ${range}`);\n                return;\n            }\n            // Update the original row with the first location, preserving other data\n            const firstLocationRange = `${sheetName}!F${targetRowIndex}`;\n            await this.sheets.spreadsheets.values.update({\n                spreadsheetId,\n                range: firstLocationRange,\n                valueInputOption: \"RAW\",\n                requestBody: {\n                    values: [\n                        [\n                            locations[0]\n                        ]\n                    ]\n                }\n            });\n            console.log(`✅ Updated first location \"${locations[0]}\" in range ${firstLocationRange}`);\n            // Insert new rows for additional locations\n            if (locations.length > 1) {\n                const numNewRows = locations.length - 1;\n                const requests = [];\n                for(let i = 1; i < locations.length; i++){\n                    // Insert a new row below the current target (shifts down each time)\n                    const newRowIndex = targetRowIndex + i - 1;\n                    requests.push({\n                        insertDimension: {\n                            range: {\n                                sheetId: sheets[0].properties.sheetId,\n                                dimension: \"ROWS\",\n                                startIndex: newRowIndex,\n                                endIndex: newRowIndex + 1\n                            },\n                            inheritFromBefore: true // Inherit formatting from above\n                        }\n                    });\n                    // Prepare new row data: copy order number, set location, blank other columns\n                    const newRowData = originalRowData.map((cell, idx)=>{\n                        if (idx === orderColumnIndex) return orderNumber; // Retain order number\n                        if (idx === locationColumnIndex) return locations[i]; // Set new location\n                        return \"\"; // Blank other columns\n                    });\n                    requests.push({\n                        updateCells: {\n                            range: {\n                                sheetId: sheets[0].properties.sheetId,\n                                startRowIndex: newRowIndex,\n                                endRowIndex: newRowIndex + 1,\n                                startColumnIndex: 0,\n                                endColumnIndex: originalRowData.length\n                            },\n                            rows: [\n                                {\n                                    values: newRowData.map((v)=>({\n                                            userEnteredValue: {\n                                                stringValue: v || \"\"\n                                            }\n                                        }))\n                                }\n                            ],\n                            fields: \"userEnteredValue\"\n                        }\n                    });\n                    console.log(`Prepared request for row ${newRowIndex + 1} with location: ${locations[i]}`);\n                }\n                // Execute batch update with retry logic\n                let attempt = 0;\n                const maxAttempts = 3;\n                while(attempt < maxAttempts){\n                    try {\n                        await this.sheets.spreadsheets.batchUpdate({\n                            spreadsheetId,\n                            requestBody: {\n                                requests\n                            }\n                        });\n                        console.log(`✅ Successfully inserted ${numNewRows} new rows for ${orderNumber}`);\n                        break;\n                    } catch (batchError) {\n                        attempt++;\n                        console.error(`❌ Batch update failed (attempt ${attempt}/${maxAttempts}):`, batchError);\n                        if (attempt === maxAttempts) throw batchError;\n                        await new Promise((resolve)=>setTimeout(resolve, 2000 * attempt)); // Exponential backoff\n                    }\n                }\n            }\n            // Verify the update\n            const verifyResponse = await this.sheets.spreadsheets.values.get({\n                spreadsheetId,\n                range: `${sheetName}!A${targetRowIndex}:M${targetRowIndex + locations.length - 1}`\n            });\n            const updatedRows = verifyResponse.data.values || [];\n            console.log(`Verified updated rows:`, updatedRows);\n        } catch (error) {\n            console.error(\"❌ Error updating sheet:\", error);\n            throw error;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/googleSheets.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/providenceAutomation.ts":
/*!*****************************************!*\
  !*** ./src/lib/providenceAutomation.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProvidenceAutomation: () => (/* binding */ ProvidenceAutomation)\n/* harmony export */ });\n/* harmony import */ var selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! selenium-webdriver */ \"(rsc)/./node_modules/selenium-webdriver/index.js\");\n/* harmony import */ var selenium_webdriver_chrome__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! selenium-webdriver/chrome */ \"(rsc)/./node_modules/selenium-webdriver/chrome.js\");\n/* harmony import */ var selenium_webdriver_chrome__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(selenium_webdriver_chrome__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sparticuz_chromium__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sparticuz/chromium */ \"(rsc)/./node_modules/@sparticuz/chromium/build/esm/index.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nclass ProvidenceAutomation {\n    async initialize() {\n        // --- THIS IS THE UPDATED SECTION ---\n        // It now handles both local development and Vercel deployment\n        const options = new (selenium_webdriver_chrome__WEBPACK_IMPORTED_MODULE_1___default().Options)();\n        let driverBuilder = new selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Builder().forBrowser(\"chrome\");\n        // Check if the code is running in the Vercel production environment\n        if (false) {} else {\n            console.log(\"Running in development mode (local). Using local chromedriver.\");\n            // Options for local development (non-headless to see the browser)\n            options.addArguments(\"--no-sandbox\");\n            options.addArguments(\"--disable-dev-shm-usage\");\n            options.addArguments(\"--start-maximized\");\n            // Point to the local chromedriver.exe\n            const chromedriverPath = path__WEBPACK_IMPORTED_MODULE_3___default().resolve(process.cwd(), \"drivers\", \"chromedriver.exe\");\n            const serviceBuilder = new selenium_webdriver_chrome__WEBPACK_IMPORTED_MODULE_1__.ServiceBuilder(chromedriverPath);\n            driverBuilder.setChromeService(serviceBuilder);\n        }\n        // Apply the configured options to the driver builder\n        driverBuilder.setChromeOptions(options);\n        // Build the driver\n        this.driver = await driverBuilder.build();\n        // Set timeouts\n        await this.driver.manage().setTimeouts({\n            implicit: 10000,\n            pageLoad: 30000,\n            script: 30000\n        });\n    }\n    async navigateToLogin() {\n        if (!this.driver) throw new Error(\"Driver not initialized\");\n        console.log(\"Navigating to Providence login page...\");\n        await this.driver.get(\"https://providence.gobolt.com/login\");\n        await this.driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.id(\"normal_login_email\")), 15000);\n    }\n    async login(normal_login_email, normal_login_password) {\n        if (!this.driver) throw new Error(\"Driver not initialized\");\n        console.log(\"Attempting to login with provided credentials...\");\n        await this.driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.id(\"normal_login_email\")), 15000);\n        const normal_login_emailField = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.id(\"normal_login_email\"));\n        const normal_login_passwordField = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.id(\"normal_login_password\"));\n        await normal_login_emailField.clear();\n        await normal_login_emailField.sendKeys(normal_login_email);\n        await normal_login_passwordField.clear();\n        await normal_login_passwordField.sendKeys(normal_login_password);\n        const submitButton = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css('button[type=\"submit\"]'));\n        await submitButton.click();\n        console.log(\"Login successful, redirected to dashboard\");\n    }\n    async selectFacility() {\n        if (!this.driver) throw new Error(\"Driver not initialized\");\n        console.log(\"Looking for facility selection modal dialog...\");\n        await this.driver.sleep(1000);\n        try {\n            console.log(\"Waiting for facility selection modal...\");\n            await this.driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".ant-modal-root, .ant-modal\")), 15000);\n            const modalSelectors = [\n                \".ant-modal-content\",\n                \".ant-modal-body\",\n                '[role=\"dialog\"]'\n            ];\n            let modalElement = null;\n            for (const selector of modalSelectors){\n                try {\n                    modalElement = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(selector));\n                    console.log(`Found modal with selector: ${selector}`);\n                    break;\n                } catch (e) {\n                    continue;\n                }\n            }\n            if (!modalElement) throw new Error(\"Facility selection modal not found\");\n            const dropdownSelectors = [\n                \".ant-select\",\n                \".ant-select-selector\",\n                '[role=\"combobox\"]',\n                \".ant-select-selection-search-input\"\n            ];\n            let dropdownElement = null;\n            for (const selector of dropdownSelectors){\n                try {\n                    dropdownElement = await modalElement.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(selector));\n                    console.log(`Found dropdown with selector: ${selector}`);\n                    break;\n                } catch (e) {\n                    continue;\n                }\n            }\n            if (!dropdownElement) throw new Error(\"Facility dropdown not found in modal\");\n            await this.driver.executeScript(\"arguments[0].scrollIntoView(true);\", dropdownElement);\n            await this.driver.sleep(1000);\n            console.log(\"Clicking facility dropdown...\");\n            await dropdownElement.click();\n            await this.driver.sleep(1000);\n            await this.driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".ant-select-dropdown, .rc-virtual-list\")), 10000);\n            const yyz5Selectors = [\n                \"//div[@title='YYZ5']\",\n                \"//div[contains(@class, 'ant-select-item') and contains(text(), 'YYZ5')]\",\n                \"//div[contains(@class, 'ant-select-item-option') and contains(text(), 'YYZ5')]\",\n                \"//*[contains(text(), 'YYZ5') and contains(@class, 'ant-select-item')]\",\n                \"//div[@role='option' and contains(text(), 'YYZ5')]\"\n            ];\n            let yyz5Element = null;\n            for (const selector of yyz5Selectors){\n                try {\n                    console.log(`Looking for YYZ5 with selector: ${selector}`);\n                    yyz5Element = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.xpath(selector));\n                    console.log(\"Found YYZ5 option\");\n                    break;\n                } catch (e) {\n                    continue;\n                }\n            }\n            if (!yyz5Element) {\n                try {\n                    yyz5Element = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.xpath(\"//*[contains(text(), 'YYZ5')]\"));\n                    console.log(\"Found YYZ5 option with generic selector\");\n                } catch (e) {\n                    throw new Error(\"YYZ5 facility option not found in the dropdown\");\n                }\n            }\n            await this.driver.executeScript(\"arguments[0].scrollIntoView(true);\", yyz5Element);\n            await this.driver.sleep(500);\n            await yyz5Element.click();\n            console.log(\"Selected YYZ5 facility\");\n            await this.driver.sleep(1000);\n        } catch (error) {\n            console.error(\"Error in facility selection:\", error);\n            throw new Error(`Failed to select facility: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n        }\n    }\n    async navigateToInventoryManagement() {\n        if (!this.driver) throw new Error(\"Driver not initialized\");\n        console.log(\"Looking for Inventory Management tab...\");\n        await this.driver.sleep(3000);\n        const inventorySelectors = [\n            '[role=\"tab\"][aria-controls*=\"Inventory\"]',\n            '[data-node-key=\"Inventory Management\"]',\n            '//div[@role=\"tab\" and contains(text(), \"Inventory Management\")]',\n            '//div[contains(@class, \"ant-tabs-tab\") and contains(text(), \"Inventory Management\")]',\n            '.ant-tabs-tab:contains(\"Inventory Management\")',\n            '[aria-labelledby*=\"Inventory Management\"]'\n        ];\n        let inventoryTab = null;\n        for (const selector of inventorySelectors){\n            try {\n                if (selector.startsWith(\"//\")) {\n                    inventoryTab = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.xpath(selector));\n                } else {\n                    inventoryTab = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(selector));\n                }\n                console.log(`Found Inventory Management tab with selector: ${selector}`);\n                break;\n            } catch (e) {\n                continue;\n            }\n        }\n        if (!inventoryTab) throw new Error(\"Inventory Management tab not found\");\n        await this.driver.executeScript(\"arguments[0].scrollIntoView(true);\", inventoryTab);\n        await this.driver.sleep(1000);\n        console.log(\"Clicking Inventory Management tab...\");\n        await inventoryTab.click();\n        await this.driver.sleep(3000);\n        console.log(\"Inventory Management tab opened successfully\");\n    }\n    async navigateToManualItems() {\n        if (!this.driver) throw new Error(\"Driver not initialized\");\n        console.log(\"Looking for Manual Items section...\");\n        const manualItemsSelectors = [\n            '//div[contains(@class, \"sc-eldPxv\") and contains(text(), \"MANUAL ITEMS\")]',\n            '//div[contains(text(), \"MANUAL ITEMS\")]',\n            '[data-testid=\"manual-items\"]',\n            \".manual-items-card\",\n            '//div[contains(@class, \"ant-col\") and .//div[contains(text(), \"MANUAL\")]]',\n            '//div[contains(@class, \"card\") and contains(text(), \"MANUAL\")]'\n        ];\n        let manualItemsElement = null;\n        for (const selector of manualItemsSelectors){\n            try {\n                if (selector.startsWith(\"//\")) {\n                    manualItemsElement = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.xpath(selector));\n                } else {\n                    manualItemsElement = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(selector));\n                }\n                console.log(`Found Manual Items with selector: ${selector}`);\n                break;\n            } catch (e) {\n                continue;\n            }\n        }\n        if (!manualItemsElement) throw new Error(\"Manual Items section not found\");\n        await this.driver.executeScript(\"arguments[0].scrollIntoView(true);\", manualItemsElement);\n        await this.driver.sleep(1000);\n        console.log(\"Clicking Manual Items...\");\n        await manualItemsElement.click();\n        await this.driver.sleep(3000);\n        try {\n            await this.driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css('input[placeholder*=\"Search\"], input[placeholder*=\"search\"]')), 10000);\n            console.log(\"Manual Items page loaded successfully\");\n        } catch (error) {\n            console.log(\"Manual Items page may have loaded, continuing...\");\n        }\n    }\n    async searchOrder(orderNumber) {\n        if (!this.driver) throw new Error(\"Driver not initialized\");\n        console.log(`Searching for order: ${orderNumber}`);\n        const searchSelectors = [\n            'input[placeholder*=\"Search code, order #, organization, customer\"]',\n            \"input.ant-input.ant-input-lg.css-43bhvr\",\n            'input[autocapitalize=\"off\"][type=\"search\"]',\n            \".ant-input-search input\",\n            'input[placeholder*=\"search\"]',\n            'input[type=\"search\"]'\n        ];\n        let searchInput = null;\n        for (const selector of searchSelectors){\n            try {\n                searchInput = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(selector));\n                console.log(`Found search input with selector: ${selector}`);\n                break;\n            } catch (e) {\n                continue;\n            }\n        }\n        if (!searchInput) throw new Error(\"Could not find search input field\");\n        console.log(\"Clearing search input field...\");\n        await searchInput.clear();\n        await this.driver.sleep(300);\n        await searchInput.sendKeys(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Key.CONTROL, \"a\");\n        await this.driver.sleep(200);\n        await searchInput.sendKeys(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Key.DELETE);\n        await this.driver.sleep(300);\n        const currentValue = await searchInput.getAttribute(\"value\");\n        if (currentValue && currentValue.trim() !== \"\") {\n            console.log(`Field still contains: \"${currentValue}\", clearing again...`);\n            await searchInput.clear();\n            await this.driver.sleep(300);\n        }\n        console.log(`Entering order number: ${orderNumber}`);\n        await searchInput.sendKeys(orderNumber);\n        await this.driver.sleep(800);\n        const enteredValue = await searchInput.getAttribute(\"value\");\n        console.log(`Entered value: \"${enteredValue}\"`);\n        if (enteredValue !== orderNumber) {\n            console.log(\"Value mismatch, clearing and re-entering...\");\n            await searchInput.clear();\n            await this.driver.sleep(300);\n            await searchInput.sendKeys(orderNumber);\n            await this.driver.sleep(500);\n        }\n        const searchButtonSelectors = [\n            \"button.ant-btn.css-43bhvr.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined.ant-btn-lg.ant-btn-icon-only.ant-input-search-button\",\n            \".ant-input-search-button\",\n            \".ant-input-group-addon button\",\n            'button[type=\"button\"][class*=\"search-button\"]',\n            \"span.ant-input-group-addon button\"\n        ];\n        let searchButton = null;\n        for (const selector of searchButtonSelectors){\n            try {\n                searchButton = await this.driver.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(selector));\n                console.log(`Found search button with selector: ${selector}`);\n                break;\n            } catch (e) {\n                continue;\n            }\n        }\n        if (searchButton) {\n            await searchButton.click();\n            console.log(\"Clicked search button\");\n        } else {\n            await searchInput.sendKeys(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Key.ENTER);\n            console.log(\"Used Enter key to search\");\n        }\n        await this.driver.sleep(3000);\n        return await this.extractOrderData(orderNumber);\n    }\n    async extractOrderData(orderNumber) {\n        if (!this.driver) throw new Error(\"Driver not initialized\");\n        const data = {\n            locations: []\n        };\n        try {\n            // Increase wait time and retry to ensure all rows are loaded\n            await this.driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".ant-table-tbody tr.ant-table-row\")), 10000); // Increased to 10s\n            let rows = await this.driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".ant-table-tbody tr.ant-table-row\"));\n            console.log(`Initial rows found: ${rows.length}`);\n            // Retry if no rows are found\n            if (rows.length === 0) {\n                console.log(\"No rows found initially, retrying...\");\n                await this.driver.sleep(2000);\n                rows = await this.driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".ant-table-tbody tr.ant-table-row\"));\n                console.log(`Retry rows found: ${rows.length}`);\n            }\n            if (rows.length > 0) {\n                let firstMatch = true;\n                for (const row of rows){\n                    try {\n                        const cells = await row.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"td\"));\n                        console.log(`Row has ${cells.length} cells`);\n                        if (cells.length >= 5) {\n                            const currentOrder = (await cells[4].getText()).trim(); // Order number in column E (index 4)\n                            console.log(`Checking row with order: ${currentOrder}`);\n                            if (currentOrder === orderNumber) {\n                                const locationCell = cells[1]; // Location in column B (index 1)\n                                let location = \"\";\n                                try {\n                                    const locationLink = await locationCell.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css('a[href*=\"/locations/\"]'));\n                                    location = (await locationLink.getText()).trim();\n                                    console.log(`✅ Found location link: ${location}`);\n                                } catch (linkError) {\n                                    location = (await locationCell.getText()).trim();\n                                    console.log(`✅ Found location text: ${location}`);\n                                }\n                                if (location) {\n                                    data.locations.push(location);\n                                    console.log(`Added location: ${location}, Total locations: ${data.locations.length}`);\n                                }\n                                if (firstMatch) {\n                                    data.code = (await cells[0].getText()).trim(); // Code in column A (index 0)\n                                    data.organization = (await cells[2].getText()).trim(); // Organization in column C (index 2)\n                                    data.customer = (await cells[3].getText()).trim(); // Customer in column D (index 3)\n                                    data.order = currentOrder;\n                                    firstMatch = false;\n                                }\n                            }\n                        } else {\n                            console.log(`❌ Row has insufficient cells (${cells.length}), skipping...`);\n                        }\n                    } catch (cellError) {\n                        console.error(`❌ Error processing row cells: ${cellError}`);\n                        continue; // Skip to next row if cell extraction fails\n                    }\n                }\n                if (data.locations.length > 0) {\n                    console.log(`Extracted data: Code=${data.code}, Locations=${data.locations.join(\", \")}, Organization=${data.organization}, Customer=${data.customer}, Order=${data.order}`);\n                } else {\n                    console.log(\"❌ No locations found for this order\");\n                    data.error = \"No locations found\";\n                }\n            } else {\n                console.log(\"No results found for this order\");\n                data.error = \"No results found\";\n            }\n        } catch (error) {\n            console.error(\"Error extracting order data:\", error);\n            data.error = \"Error extracting data\";\n        }\n        return data;\n    }\n    constructor(){\n        this.driver = null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/providenceAutomation.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/googleapis","vendor-chunks/selenium-webdriver","vendor-chunks/google-auth-library","vendor-chunks/jszip","vendor-chunks/uuid","vendor-chunks/pako","vendor-chunks/ws","vendor-chunks/readable-stream","vendor-chunks/googleapis-common","vendor-chunks/math-intrinsics","vendor-chunks/gaxios","vendor-chunks/es-errors","vendor-chunks/whatwg-url","vendor-chunks/tar-stream","vendor-chunks/qs","vendor-chunks/jws","vendor-chunks/call-bind-apply-helpers","vendor-chunks/@sparticuz","vendor-chunks/debug","vendor-chunks/text-decoder","vendor-chunks/json-bigint","vendor-chunks/google-logging-utils","vendor-chunks/get-proto","vendor-chunks/tr46","vendor-chunks/string_decoder","vendor-chunks/object-inspect","vendor-chunks/inherits","vendor-chunks/https-proxy-agent","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/gcp-metadata","vendor-chunks/function-bind","vendor-chunks/follow-redirects","vendor-chunks/fast-fifo","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/agent-base","vendor-chunks/node-fetch","vendor-chunks/wrappy","vendor-chunks/webidl-conversions","vendor-chunks/util-deprecate","vendor-chunks/url-template","vendor-chunks/tmp","vendor-chunks/tar-fs","vendor-chunks/streamx","vendor-chunks/side-channel","vendor-chunks/side-channel-weakmap","vendor-chunks/side-channel-map","vendor-chunks/side-channel-list","vendor-chunks/safe-buffer","vendor-chunks/pump","vendor-chunks/process-nextick-args","vendor-chunks/once","vendor-chunks/ms","vendor-chunks/lie","vendor-chunks/jwa","vendor-chunks/isarray","vendor-chunks/is-stream","vendor-chunks/immediate","vendor-chunks/hasown","vendor-chunks/gtoken","vendor-chunks/get-intrinsic","vendor-chunks/extend","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/end-of-stream","vendor-chunks/dunder-proto","vendor-chunks/core-util-is","vendor-chunks/call-bound","vendor-chunks/buffer-equal-constant-time","vendor-chunks/bignumber.js","vendor-chunks/base64-js","vendor-chunks/b4a"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprovidence-automation%2Froute&page=%2Fapi%2Fprovidence-automation%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprovidence-automation%2Froute.ts&appDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthand%5COneDrive%5CDesktop%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();